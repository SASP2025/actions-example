# This action will execute pytest and coverage
# Schema: https://json.schemastore.org/github-action.json
# This should include a GitHub summary report in the test
# It is up to the workflow caller to setup their environment
# setup configuration for pytest should be in a pyproject.toml file
# Schema: https://json.schemastore.org/github-action.json
name: 'Execute pytest'
description: 'Run tests with pytest and provide GitHub Job Summaries report'
inputs:
  coverage:
    description: Run coverage with pytest? 
    type: boolean
    default: true
    required: false

runs:
  using: "composite"
  steps:

    # identify if coverage should be used
    - name: "Use coverage"
      shell: bash
      if: ${{ fromJSON(inputs.coverage) == true }}
      run: echo "COVERAGE_ARGS=--cov --cov-report=" >> $GITHUB_ENV
    
    - name: "Dont use coverage"
      shell: bash
      if: ${{ fromJSON(inputs.coverage) == false }}
      run: echo "COVERAGE_ARGS= " >> $GITHUB_ENV
        

    # pytest with the configured options and coverage
    - name: "run pytest"
      id: run_pytest
      shell: bash
      run: |
        echo "# Pytest Results :rocket: " >> $GITHUB_STEP_SUMMARY
        pytest --cache-clear ${{ env.COVERAGE_ARGS }} >> $GITHUB_STEP_SUMMARY 

    # return the report summary even if pytest fails and coverage is requested
    - name: "Get Coverage Report"
      id: capture_coverage
      shell: bash
      if: ${{ fromJSON(inputs.coverage) == true }}
      run: |
        echo "# Pytest Coverage Report :bowtie: " >> $GITHUB_STEP_SUMMARY
        echo "$(coverage report --format=markdown)" >> $GITHUB_STEP_SUMMARY